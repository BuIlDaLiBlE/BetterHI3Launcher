<Window x:Class="BetterHI3Launcher.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:gif="https://github.com/XamlAnimatedGif/XamlAnimatedGif"
		xmlns:local="clr-namespace:BetterHI3Launcher"
		mc:Ignorable="d"
		WindowStyle="None"
		ResizeMode="CanMinimize"
		AllowsTransparency="True"
		Background="{DynamicResource BackgroundShadow}"
		WindowStartupLocation="CenterScreen"
		ContentRendered="Window_ContentRendered"
		Closing="MainWindow_Closing"
		UseLayoutRounding="True"
		TextOptions.TextFormattingMode="Display"
		TextOptions.TextRenderingMode="ClearType"
		Title="Better HI3 Launcher" Width="1300" Height="750">
	<Window.TaskbarItemInfo>
		<TaskbarItemInfo/>
	</Window.TaskbarItemInfo>
	<Window.CommandBindings>
		<CommandBinding Command="{x:Static local:MainWindow.DownloadCacheCommand}" Executed="DownloadCacheCommand_Executed"/>
		<CommandBinding Command="{x:Static local:MainWindow.RepairGameCommand}" Executed="RepairGameCommand_Executed"/>
		<CommandBinding Command="{x:Static local:MainWindow.MoveGameCommand}" Executed="MoveGameCommand_Executed"/>
		<CommandBinding Command="{x:Static local:MainWindow.UninstallGameCommand}" Executed="UninstallGameCommand_Executed"/>
		<CommandBinding Command="{x:Static local:MainWindow.WebProfileCommand}" Executed="WebProfileCommand_Executed"/>
		<CommandBinding Command="{x:Static local:MainWindow.FeedbackCommand}" Executed="FeedbackCommand_Executed"/>
		<CommandBinding Command="{x:Static local:MainWindow.ChangelogCommand}" Executed="ChangelogCommand_Executed"/>
		<CommandBinding Command="{x:Static local:MainWindow.CustomBackgroundCommand}" Executed="CustomBackgroundCommand_Executed"/>
		<CommandBinding Command="{x:Static local:MainWindow.ToggleLogCommand}" Executed="ToggleLogCommand_Executed"/>
		<CommandBinding Command="{x:Static local:MainWindow.ToggleSoundsCommand}" Executed="ToggleSoundsCommand_Executed"/>
		<CommandBinding Command="{x:Static local:MainWindow.AboutCommand}" Executed="AboutCommand_Executed"/>
	</Window.CommandBindings>
	<Window.Resources>
		<local:ProgressToAngleConverter x:Key="ProgressConverter"/>
		<FontFamily x:Key="Font">/BetterHI3Launcher;component/Assets/Fonts/#FZLanTingHei-B-GBK</FontFamily>
		<FontFamily x:Key="FontStatic">/BetterHI3Launcher;component/Assets/Fonts/#FZLanTingHei-B-GBK</FontFamily>
		<BitmapImage x:Key="BackgroundImage" UriSource=""/>
		<BitmapImage x:Key="PreloadCircle" UriSource="/Assets/Images/Button_Preload_Circle.png"/>
		<BitmapImage x:Key="PreloadCheckmark" UriSource="/Assets/Images/Button_Preload_Checkmark.png"/>
		<ImageBrush x:Key="BackgroundShadow" ImageSource="/Assets/Images/BackgroundShadow.png"/>
		<ImageBrush x:Key="ButtonLaunch" ImageSource="/Assets/Images/Button_Launch.png"/>
		<ImageBrush x:Key="ButtonLaunchPressed" ImageSource="/Assets/Images/Button_Launch_Pressed.png"/>
		<ImageBrush x:Key="ButtonLaunchDisabled" ImageSource="/Assets/Images/Button_Launch_Disabled.png"/>
		<ImageBrush x:Key="ButtonOptions" ImageSource="/Assets/Images/Button_Options.png"/>
		<ImageBrush x:Key="ButtonOptionsPressed" ImageSource="/Assets/Images/Button_Options_Pressed.png"/>
		<ImageBrush x:Key="ButtonOptionsDisabled" ImageSource="/Assets/Images/Button_Options_Disabled.png"/>
		<ImageBrush x:Key="CloseButton" ImageSource="/Assets/Images/Button_Close.png"/>
		<ImageBrush x:Key="CloseButtonPressed" ImageSource="/Assets/Images/Button_Close_Pressed.png"/>
		<ImageBrush x:Key="CloseButtonHighlighted" ImageSource="/Assets/Images/Button_Close_Highlighted.png"/>
		<ImageBrush x:Key="MinimizeButton" ImageSource="/Assets/Images/Button_Minimize.png"/>
		<ImageBrush x:Key="MinimizeButtonPressed" ImageSource="/Assets/Images/Button_Minimize_Pressed.png"/>
		<ImageBrush x:Key="MinimizeButtonHighlighted" ImageSource="/Assets/Images/Button_Minimize_Highlighted.png"/>
		<ImageBrush x:Key="BoxCloseButton" ImageSource="/Assets/Images/Button_Box_Close.png"/>
		<ImageBrush x:Key="BoxCloseButtonPressed" ImageSource="/Assets/Images/Button_Box_Close_Pressed.png"/>
		<ImageBrush x:Key="BoxCloseButtonHighlighted" ImageSource="/Assets/Images/Button_Box_Close_Highlighted.png"/>
		<ImageBrush x:Key="PreloadButton" ImageSource="/Assets/Images/Button_Preload.png"/>
		<ImageBrush x:Key="PreloadButtonHighlighted" ImageSource="/Assets/Images/Button_Preload_Highlighted.png"/>
		<ImageBrush x:Key="PreloadButtonPressed" ImageSource="/Assets/Images/Button_Preload_Pressed.png"/>
		<ImageBrush x:Key="PreloadPauseButton" ImageSource="/Assets/Images/Button_Preload_Pause.png"/>
		<ImageBrush x:Key="PreloadResumeButton" ImageSource="/Assets/Images/Button_Preload_Resume.png"/>
		<ImageBrush x:Key="DownloadPauseButton" ImageSource="/Assets/Images/Button_Pause.png"/>
		<ImageBrush x:Key="DownloadPauseButtonHighlighted" ImageSource="/Assets/Images/Button_Pause_Highlighted.png"/>
		<ImageBrush x:Key="DownloadPauseButtonPressed" ImageSource="/Assets/Images/Button_Pause_Pressed.png"/>
		<ImageBrush x:Key="DownloadResumeButton" ImageSource="/Assets/Images/Button_Resume.png"/>
		<ImageBrush x:Key="DownloadResumeButtonHighlighted" ImageSource="/Assets/Images/Button_Resume_Highlighted.png"/>
		<ImageBrush x:Key="DownloadResumeButtonPressed" ImageSource="/Assets/Images/Button_Resume_Pressed.png"/>
		<Style x:Key="FocusVisual">
			<Setter Property="Control.Template">
				<Setter.Value>
					<ControlTemplate>
						<Rectangle UseLayoutRounding="True" StrokeThickness="2" Stroke="{DynamicResource {x:Static SystemColors.MenuHighlightBrushKey}}"/>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type ComboBox}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="FontFamily" Value="{StaticResource FontStatic}"/>
			<Setter Property="SelectedIndex" Value="0"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBox}">
						<Grid>
							<ToggleButton x:Name="ToggleButton" Grid.Column="2" Focusable="False" ClickMode="Release" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}">
								<ToggleButton.Template>
									<ControlTemplate TargetType="{x:Type ToggleButton}">
										<Grid>
											<Grid.ColumnDefinitions>
												<ColumnDefinition/>
												<ColumnDefinition Width="20"/>
											</Grid.ColumnDefinitions>
											<Border x:Name="Border" Grid.ColumnSpan="2" Background="#E0E0E0" BorderBrush="White" BorderThickness="1"/>
											<Path x:Name="Arrow" Grid.Column="1" Fill="Black" HorizontalAlignment="Center" VerticalAlignment="Center" Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"/>
										</Grid>
										<ControlTemplate.Triggers>
											<Trigger Property="ToggleButton.IsMouseOver" Value="True">
												<Setter TargetName="Border" Property="Background" Value="#A9A9A9"/>
											</Trigger>
											<Trigger Property="ToggleButton.IsChecked" Value="True">
												<Setter TargetName="Border" Property="Background" Value="Gray"/>
											</Trigger>
											<Trigger Property="IsEnabled" Value="False">
												<Setter TargetName="Border" Property="Background" Value="DimGray"/>
												<Setter TargetName="Border" Property="BorderBrush" Value="DarkGray"/>
											</Trigger>
										</ControlTemplate.Triggers>
									</ControlTemplate>
								</ToggleButton.Template>
							</ToggleButton>
							<ContentPresenter x:Name="ContentSite" IsHitTestVisible="False" Content="{TemplateBinding SelectionBoxItem}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Margin="3,3,23,3" VerticalAlignment="Stretch" HorizontalAlignment="Left"/>
							<Popup x:Name="Popup" Placement="Bottom" IsOpen="{TemplateBinding IsDropDownOpen}" Focusable="False">
								<Grid x:Name="DropDown" MinWidth="{TemplateBinding ActualWidth}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
									<Border x:Name="DropDownBorder" BorderThickness="1">
										<Border.BorderBrush>
											<SolidColorBrush Color="White"/>
										</Border.BorderBrush>
										<Border.Background>
											<SolidColorBrush Color="#E0E0E0"/>
										</Border.Background>
									</Border>
									<ScrollViewer>
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained"/>
									</ScrollViewer>
								</Grid>
							</Popup>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasItems" Value="False">
								<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
							</Trigger>
							<Trigger Property="IsGrouping" Value="True">
								<Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="LaunchButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonLaunch}"/>
			<Setter Property="Foreground" Value="#313131"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="HorizontalAlignment" Value="Left"/>
			<Setter Property="VerticalAlignment" Value="Bottom"/>
			<Setter Property="Width" Value="187"/>
			<Setter Property="Height" Value="46"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="FontSize" Value="24"/>
			<Setter Property="UseLayoutRounding" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource ButtonLaunchPressed}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Background" TargetName="border" Value="{StaticResource ButtonLaunchDisabled}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#333333"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="OptionsButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource ButtonOptions}"/>
			<Setter Property="Foreground" Value="#313131"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="HorizontalAlignment" Value="Right"/>
			<Setter Property="VerticalAlignment" Value="Bottom"/>
			<Setter Property="Width" Value="31"/>
			<Setter Property="Height" Value="46"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="FontSize" Value="24"/>
			<Setter Property="UseLayoutRounding" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource ButtonOptionsPressed}"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Background" TargetName="border" Value="{StaticResource ButtonOptionsDisabled}"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#333333"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="DownloadPauseButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource DownloadPauseButton}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Width" Value="30"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="UseLayoutRounding" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="True">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource DownloadPauseButtonHighlighted}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource DownloadPauseButtonPressed}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="DownloadResumeButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource DownloadResumeButton}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Width" Value="30"/>
			<Setter Property="Height" Value="30"/>
			<Setter Property="UseLayoutRounding" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="True">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource DownloadResumeButtonHighlighted}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource DownloadResumeButtonPressed}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="PreloadButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource PreloadButton}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Width" Value="50"/>
			<Setter Property="Height" Value="50"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="True">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource PreloadButtonHighlighted}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource PreloadButtonPressed}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="PreloadPauseButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource PreloadPauseButton}"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="Width" Value="50"/>
			<Setter Property="Height" Value="50"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="True">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="CloseButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource CloseButton}"/>
			<Setter Property="Foreground" Value="#7FA9A9A9"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="HorizontalAlignment" Value="Right"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Width" Value="32"/>
			<Setter Property="Height" Value="32"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="True">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource CloseButtonHighlighted}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource CloseButtonPressed}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="MinimizeButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource MinimizeButton}"/>
			<Setter Property="Foreground" Value="#7FA9A9A9"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="HorizontalAlignment" Value="Right"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Width" Value="32"/>
			<Setter Property="Height" Value="32"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="FontWeight" Value="Bold"/>
			<Setter Property="FontSize" Value="16"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="True">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource MinimizeButtonHighlighted}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource MinimizeButtonPressed}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="BoxCloseButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Background" Value="{StaticResource BoxCloseButton}"/>
			<Setter Property="Foreground" Value="#7FA9A9A9"/>
			<Setter Property="BorderThickness" Value="0"/>
			<Setter Property="HorizontalAlignment" Value="Right"/>
			<Setter Property="VerticalAlignment" Value="Top"/>
			<Setter Property="Width" Value="24"/>
			<Setter Property="Height" Value="24"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsDefaulted" Value="True">
								<Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
							</Trigger>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource BoxCloseButtonHighlighted}"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border" Value="{StaticResource BoxCloseButtonPressed}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="WhiteButtonStyle" TargetType="{x:Type Button}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="BorderBrush" Value="White"/>
			<Setter Property="Margin" Value="10"/>
			<Setter Property="Padding" Value="3,1,3,1"/>
			<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
			<Setter Property="FontSize" Value="18"/>
			<Setter Property="UseLayoutRounding" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Button}">
						<Border x:Name="border" Background="#E0E0E0" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
							<ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter Property="Background" TargetName="border" Value="#A9A9A9"/>
							</Trigger>
							<Trigger Property="IsPressed" Value="True">
								<Setter Property="Background" TargetName="border" Value="Gray"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Background" TargetName="border" Value="DimGray"/>
								<Setter Property="BorderBrush" TargetName="border" Value="DarkGray"/>
								<Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#333333"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="CheckBoxStyle" TargetType="{x:Type CheckBox}">
			<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
			<Setter Property="Width" Value="48"/>
			<Setter Property="Height" Value="36"/>
			<Setter Property="UseLayoutRounding" Value="True"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type CheckBox}">
						<StackPanel Orientation="Horizontal">
							<Image x:Name="Image" Source="/Assets/Images/Checkbox_On.png"/>
							<ContentPresenter/>
						</StackPanel>
						<ControlTemplate.Triggers>
							<Trigger Property="IsChecked" Value="True">
								<Setter TargetName="Image" Property="Source" Value="/Assets/Images/Checkbox_On.png"/>
							</Trigger>
							<Trigger Property="IsChecked" Value="False">
								<Setter TargetName="Image" Property="Source" Value="/Assets/Images/Checkbox_Off.png"/>
							</Trigger>
							<Trigger Property="IsEnabled" Value="False">
								<Setter TargetName="Image" Property="Source" Value="/Assets/Images/Checkbox_Disabled.png"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="ProgressBarStyle" TargetType="{x:Type ProgressBar}" >
			<Setter Property="Maximum" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ProgressBar}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Determinate" />
									<VisualState x:Name="Indeterminate">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Duration="00:00:00"
                                                 Storyboard.TargetName="PART_Indicator"
                                                 Storyboard.TargetProperty="Background">
												<DiscreteObjectKeyFrame KeyTime="00:00:00">
													<DiscreteObjectKeyFrame.Value>
														<SolidColorBrush>Transparent</SolidColorBrush>
													</DiscreteObjectKeyFrame.Value>
												</DiscreteObjectKeyFrame>
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border Name="PART_Track" Background="#7FFFFFFF" BorderBrush="White" BorderThickness="1"/>
							<Border Name="PART_Indicator" Background="Green" BorderThickness="1" HorizontalAlignment="Left">
								<Border.BorderBrush>
									<LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
										<GradientBrush.GradientStops>
											<GradientStopCollection>
												<GradientStop Color="{DynamicResource BorderLightColor}" Offset="0.0" />
												<GradientStop Color="{DynamicResource BorderMediumColor}" Offset="1.0" />
											</GradientStopCollection>
										</GradientBrush.GradientStops>
									</LinearGradientBrush>
								</Border.BorderBrush>
								<Grid ClipToBounds="True" x:Name="Animation">
									<Rectangle x:Name="PART_GlowRect" Width="50" HorizontalAlignment="Left" Fill="Green" Margin="-50,0,0,0"/>
								</Grid>
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="DownloadProgressBarStyle" TargetType="{x:Type ProgressBar}">
			<Setter Property="Maximum" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ProgressBar}">
						<Grid>
							<Border BorderBrush="#7FFFFFFF" BorderThickness="2"/>
							<Border Name="PART_Track" Background="#32FFFFFF" Margin="4"/>
							<Border Name="PART_Indicator" Background="White" HorizontalAlignment="Left" Margin="4"/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="RadialProgressBarStyle" TargetType="{x:Type ProgressBar}">
			<Setter Property="Maximum" Value="1"/>
			<Setter Property="BorderBrush" Value="#FFCD0C"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ProgressBar}">
						<Grid>
							<local:Arc StrokeThickness="30" Stroke="{TemplateBinding BorderBrush}">
								<local:Arc.StartAngle>
									<MultiBinding Converter="{StaticResource ProgressConverter}">
										<Binding Path="Minimum" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="." RelativeSource="{RelativeSource TemplatedParent}"/>
									</MultiBinding>
								</local:Arc.StartAngle>
								<local:Arc.EndAngle>
									<MultiBinding Converter="{StaticResource ProgressConverter}">
										<Binding Path="Value" RelativeSource="{RelativeSource TemplatedParent}"/>
										<Binding Path="." RelativeSource="{RelativeSource TemplatedParent}"/>
									</MultiBinding>
								</local:Arc.EndAngle>
							</local:Arc>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
	<Grid>
		<Grid Name="Grid" Width="1280" Height="730">
			<Image Name="BackgroundImage" Stretch="Fill" Source="{DynamicResource BackgroundImage}"/>
			<MediaElement Name="BackgroundMedia" IsMuted="True" Stretch="Fill" Focusable="False" ScrubbingEnabled="True" Visibility="Collapsed"/>
			<Grid Name="TitleBar" VerticalAlignment="Top">
				<Rectangle Height="32" Fill="#D8141414"/>
				<StackPanel Orientation="Horizontal">
					<TextBlock Name="GameNameText" VerticalAlignment="Center" Margin="5" Foreground="#FFFFFF" FontFamily="Segoe UI" FontSize="15">
						<TextBlock.Effect>
							<DropShadowEffect ShadowDepth="0"/>
						</TextBlock.Effect>
					</TextBlock>
					<TextBlock Name="GameVersionText" VerticalAlignment="Center" Foreground="#434343" FontFamily="Segoe UI" FontSize="15">
						<TextBlock.Effect>
							<DropShadowEffect ShadowDepth="0"/>
						</TextBlock.Effect>
					</TextBlock>
				</StackPanel>
				<StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
					<Button Name="MinimizeButton" Style="{DynamicResource MinimizeButtonStyle}" Click="MinimizeButton_Click"/>
					<Button Name="CloseButton" Style="{DynamicResource CloseButtonStyle}" Click="CloseButton_Click"/>
				</StackPanel>
			</Grid>
			<StackPanel VerticalAlignment="Bottom" HorizontalAlignment="Right" Margin="0,0,57,25" MaxWidth="218">
				<TextBlock Name="ProgressText" HorizontalAlignment="Center" Margin="0,0,0,5" Foreground="White" FontFamily="{DynamicResource Font}" FontSize="12" TextAlignment="Center" TextWrapping="Wrap">
					<TextBlock.Effect>
						<DropShadowEffect ShadowDepth="0"/>
					</TextBlock.Effect>
				</TextBlock>
				<StackPanel HorizontalAlignment="Center">
					<ProgressBar Name="ProgressBar" Style="{StaticResource ProgressBarStyle}" Margin="0,0,0,5" Height="5" Visibility="Collapsed"/>
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,5">
						<TextBlock Name="ServerLabel" Margin="0,0,5,0" Foreground="White" FontFamily="{DynamicResource Font}" FontSize="16">
							<TextBlock.Effect>
								<DropShadowEffect BlurRadius="1" ShadowDepth="2"/>
							</TextBlock.Effect>
						</TextBlock>
						<ComboBox Name="ServerDropdown" Width="120" Height="20" DropDownOpened="ServerDropdown_Opened" SelectionChanged="ServerDropdown_Changed">
							<ComboBoxItem Content="Global"/>
							<ComboBoxItem Content="SEA"/>
							<ComboBoxItem Content="CN"/>
							<ComboBoxItem Content="TW/HK/MO"/>
							<ComboBoxItem Content="KR"/>
							<ComboBoxItem Content="JP"/>
						</ComboBox>
					</StackPanel>
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Right" Margin="0,0,0,10">
						<TextBlock Name="MirrorLabel" Margin="0,0,5,0" Foreground="White" FontFamily="{DynamicResource Font}" FontSize="16">
							<TextBlock.Effect>
								<DropShadowEffect BlurRadius="1" ShadowDepth="2"/>
							</TextBlock.Effect>
						</TextBlock>
						<ComboBox Name="MirrorDropdown" Width="120" Height="20" DropDownOpened="MirrorDropdown_Opened" SelectionChanged="MirrorDropdown_Changed">
							<ComboBoxItem Content="HoYoverse"/>
							<ComboBoxItem Content="Bp Network"/>
						</ComboBox>
					</StackPanel>
				</StackPanel>
				<StackPanel Orientation="Horizontal" Margin="0,0,0,8">
					<Button Name="LaunchButton" Style="{DynamicResource LaunchButtonStyle}" Click="LaunchButton_Click" IsEnabled="False"/>
					<Button Name="OptionsButton" Style="{DynamicResource OptionsButtonStyle}" Click="OptionsButton_Click" IsEnabled="False">
						<Button.ContextMenu>
							<ContextMenu Name="OptionsContextMenu"/>
						</Button.ContextMenu>
					</Button>
				</StackPanel>
			</StackPanel>
			<Grid Name="PreloadGrid" Visibility="Collapsed" ZIndex="1">
				<Grid HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,364,50" Width="240" Height="50">
					<StackPanel Orientation="Horizontal">
						<Grid HorizontalAlignment="Left">
							<Grid.RowDefinitions>
								<RowDefinition Height="*"/>
								<RowDefinition Height="auto"/>
							</Grid.RowDefinitions>
							<Button Name="PreloadButton" Style="{DynamicResource PreloadButtonStyle}" Click="PreloadButton_Click"/>
							<Image Name="PreloadCircle" Source="{StaticResource PreloadCircle}" Visibility="Collapsed"/>
							<Viewbox>
								<ProgressBar Name="PreloadCircleProgressBar" Style="{StaticResource RadialProgressBarStyle}" Margin="20" Width="400" Height="400" Visibility="Collapsed"/>
							</Viewbox>
							<Button Name="PreloadPauseButton" Style="{DynamicResource PreloadPauseButtonStyle}" Click="PreloadPauseButton_Click" Visibility="Collapsed"/>
							<Image Name="PreloadCheckmark" Source="{StaticResource PreloadCheckmark}" Visibility="Collapsed"/>
						</Grid>
						<Grid Margin="12,0">
							<StackPanel VerticalAlignment="Center">
								<StackPanel.Resources>
									<Style TargetType="{x:Type TextBlock}">
										<Setter Property="Margin" Value="0,2"/>
										<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
									</Style>
								</StackPanel.Resources>
								<Viewbox HorizontalAlignment="Left" StretchDirection="DownOnly" Stretch="Fill" Width="178">
									<TextBlock Name="PreloadTopText" Foreground="White" FontSize="16">
										<TextBlock.Effect>
											<DropShadowEffect BlurRadius="1" ShadowDepth="2"/>
										</TextBlock.Effect>
									</TextBlock>
								</Viewbox>
								<Viewbox HorizontalAlignment="Left" StretchDirection="DownOnly" Stretch="Fill" Width="178">
									<TextBlock Name="PreloadBottomText" Foreground="#FFCB0B" FontSize="14">
										<TextBlock.Effect>
											<DropShadowEffect BlurRadius="1" ShadowDepth="2"/>
										</TextBlock.Effect>
									</TextBlock>
								</Viewbox>
							</StackPanel>
						</Grid>
					</StackPanel>
				</Grid>
				<Grid Name="PreloadStatusGrid" HorizontalAlignment="Right" VerticalAlignment="Bottom" Margin="0,0,617,30" Width="315" Height="90" Background="#80000000">
					<Grid.Style>
						<Style TargetType="{x:Type Grid}">
							<Setter Property="Visibility" Value="Hidden"/>
							<Style.Triggers>
								<DataTrigger Binding="{Binding IsMouseOver, ElementName=PreloadPauseButton}" Value="True">
									<Setter Property="Visibility" Value="Visible"/>
								</DataTrigger>
							</Style.Triggers>
						</Style>
					</Grid.Style>
					<StackPanel HorizontalAlignment="Left">
						<StackPanel.Resources>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="Margin" Value="12,12,0,0"/>
								<Setter Property="Foreground" Value="White"/>
								<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
								<Setter Property="FontSize" Value="12"/>
							</Style>
						</StackPanel.Resources>
						<TextBlock Name="PreloadStatusTopLeftText"/>
						<TextBlock Name="PreloadStatusMiddleLeftText"/>
						<TextBlock Name="PreloadStatusBottomLeftText"/>
					</StackPanel>
					<StackPanel HorizontalAlignment="Right">
						<StackPanel.Resources>
							<Style TargetType="{x:Type TextBlock}">
								<Setter Property="Margin" Value="0,12,12,0"/>
								<Setter Property="Foreground" Value="White"/>
								<Setter Property="FontFamily" Value="{DynamicResource Font}"/>
								<Setter Property="FontSize" Value="12"/>
								<Setter Property="TextAlignment" Value="Right"/>
							</Style>
						</StackPanel.Resources>
						<TextBlock Name="PreloadStatusTopRightText"/>
						<TextBlock Name="PreloadStatusMiddleRightText"/>
						<TextBlock Name="PreloadStatusBottomRightText"/>
					</StackPanel>
				</Grid>
			</Grid>
			<StackPanel Name="DownloadProgressBarStackPanel" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="50,20" Width="820">
				<DockPanel>
					<TextBlock Name="DownloadProgressText" FontFamily="{DynamicResource Font}" FontSize="14" Foreground="White">
						<TextBlock.Effect>
							<DropShadowEffect BlurRadius="1" ShadowDepth="2"/>
						</TextBlock.Effect>
					</TextBlock>
					<TextBlock Name="DownloadETAText" HorizontalAlignment="Right" Margin="0,0,3,0" FontFamily="{DynamicResource Font}" FontSize="14" Foreground="#FFD847">
						<TextBlock.Effect>
							<DropShadowEffect BlurRadius="1" ShadowDepth="2"/>
						</TextBlock.Effect>
					</TextBlock>
				</DockPanel>
				<Grid>
					<Grid.ColumnDefinitions>
						<ColumnDefinition Width="*"/>
						<ColumnDefinition Width="Auto"/>
					</Grid.ColumnDefinitions>
					<ProgressBar Name="DownloadProgressBar" Style="{StaticResource DownloadProgressBarStyle}" Margin="0,4,0,8" Height="24"/>
					<Button Grid.Column="1" Name="DownloadPauseButton" Style="{DynamicResource DownloadPauseButtonStyle}" Margin="10,0,0,4" Click="DownloadPauseButton_Click"/>
					<Button Grid.Column="1" Name="DownloadResumeButton" Style="{DynamicResource DownloadResumeButtonStyle}" Margin="10,0,0,4" Click="DownloadPauseButton_Click" Visibility="Collapsed"/>
				</Grid>
				<TextBlock Name="DownloadSpeedText" FontFamily="{DynamicResource Font}" FontSize="14" Foreground="#C8FFFFFF">
					<TextBlock.Effect>
						<DropShadowEffect BlurRadius="1" ShadowDepth="2"/>
					</TextBlock.Effect>
				</TextBlock>
			</StackPanel>
			<Grid Name="LogBox" Margin="50,100" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="820" Height="470" UseLayoutRounding="True" Visibility="Collapsed">
				<StackPanel>
					<ScrollViewer Name="LogBoxScrollViewer" Width="{Binding Path=ActualWidth, ElementName=LogBox, Mode=OneWay}" Height="{Binding Path=ActualHeight, ElementName=LogBox, Mode=OneWay}" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto">
						<RichTextBox Name="LogBoxRichTextBox" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#C8000000" Foreground="White" FontFamily="Consolas" FocusVisualStyle="{StaticResource FocusVisual}" IsReadOnly="True">
							<RichTextBox.Resources>
								<Style TargetType="{x:Type Paragraph}">
									<Setter Property="Margin" Value="0"/>
								</Style>
							</RichTextBox.Resources>
						</RichTextBox>
					</ScrollViewer>
				</StackPanel>
			</Grid>
			<Grid Name="IntroBox" Background="#80000000" Visibility="Collapsed">
				<Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="644" Background="#C8FFFFFF">
					<StackPanel>
						<TextBlock Name="IntroBoxTitleTextBlock" Margin="25,5,25,5" FontFamily="{DynamicResource Font}" FontWeight="Bold" FontSize="15" TextAlignment="Center"/>
						<TextBlock Name="IntroBoxMessageTextBlock" Margin="150,0,22,0" FontFamily="Segoe UI" TextWrapping="Wrap"/>
					</StackPanel>
					<StackPanel Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
						<Button Name="IntroBoxOKButton" Style="{DynamicResource WhiteButtonStyle}" Click="IntroBoxCloseButton_Click"/>
					</StackPanel>
					<Image gif:AnimationBehavior.SourceUri="Assets/Images/HoV_Dance.gif" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="16,25,0,18" Width="128"/>
					<Button Name="IntroBoxCloseButton" Style="{DynamicResource BoxCloseButtonStyle}" Click="IntroBoxCloseButton_Click"/>
				</Grid>
			</Grid>
			<Grid Name="RepairBox" Background="#80000000" Visibility="Collapsed">
				<Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="644" Background="#C8FFFFFF">
					<StackPanel>
						<StackPanel>
							<TextBlock Name="RepairBoxTitleTextBlock" Margin="25,5,25,5" FontFamily="{DynamicResource Font}" FontWeight="Bold" FontSize="15" TextAlignment="Center"/>
							<TextBlock Name="RepairBoxMessageTextBlock" Margin="22,0,22,5" FontFamily="Segoe UI" TextWrapping="Wrap"/>
						</StackPanel>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
							<Button Name="RepairBoxYesButton" Style="{DynamicResource WhiteButtonStyle}" Click="RepairBoxYesButton_Click"/>
							<Button Name="RepairBoxNoButton" Style="{DynamicResource WhiteButtonStyle}" Click="RepairBoxCloseButton_Click"/>
							<Button Name="RepairBoxGenerateButton" Style="{DynamicResource WhiteButtonStyle}" Click="RepairBoxGenerateButton_Click"/>
						</StackPanel>
					</StackPanel>
					<Button Name="RepairBoxCloseButton" Style="{DynamicResource BoxCloseButtonStyle}" Click="RepairBoxCloseButton_Click"/>
				</Grid>
			</Grid>
			<Grid Name="FPSInputBox" Background="#80000000" Visibility="Collapsed">
				<Grid HorizontalAlignment="Center" VerticalAlignment="Center" Background="#C8FFFFFF">
					<StackPanel>
						<TextBlock Name="FPSInputBoxTitleTextBlock" Margin="25,5,25,5" FontFamily="{DynamicResource Font}" FontWeight="Bold" FontSize="15" TextAlignment="Center"/>
						<DockPanel Height="26" Margin="100,5">
							<TextBlock Name="CombatFPSInputBoxTextBlock" Margin="25,5,25,0" FontFamily="{DynamicResource Font}" FontWeight="Bold" FontSize="15" TextAlignment="Center"/>
							<TextBox Name="CombatFPSInputBoxTextBox" HorizontalAlignment="Right" VerticalAlignment="Center" Width="50" Height="25" MaxLength="3" FontFamily="Segoe UI" FontWeight="Bold" FontSize="16" TextAlignment="Center" PreviewTextInput="FPSInputBoxTextBox_PreviewTextInput" DataObject.Pasting="FPSInputBoxTextBox_Pasting"/>
						</DockPanel>
						<DockPanel Height="26" Margin="100,5">
							<TextBlock Name="MenuFPSInputBoxTextBlock" Margin="25,5,25,0" FontFamily="{DynamicResource Font}" FontWeight="Bold" FontSize="15" TextAlignment="Center"/>
							<TextBox Name="MenuFPSInputBoxTextBox" HorizontalAlignment="Right" VerticalAlignment="Center" Width="50" Height="25" MaxLength="3" FontFamily="Segoe UI" FontWeight="Bold" FontSize="16" TextAlignment="Center" PreviewTextInput="FPSInputBoxTextBox_PreviewTextInput" DataObject.Pasting="FPSInputBoxTextBox_Pasting"/>
						</DockPanel>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
							<Button Name="FPSInputBoxOKButton" Style="{DynamicResource WhiteButtonStyle}" Click="FPSInputBoxOKButton_Click"/>
							<Button Name="FPSInputBoxCancelButton" Style="{DynamicResource WhiteButtonStyle}" Click="FPSInputBoxCancelButton_Click"/>
						</StackPanel>
					</StackPanel>
					<Button Name="FPSInputBoxCloseButton" Style="{DynamicResource BoxCloseButtonStyle}" Click="FPSInputBoxCancelButton_Click"/>
				</Grid>
			</Grid>
			<Grid Name="ResolutionInputBox" Background="#80000000" Visibility="Collapsed">
				<Grid HorizontalAlignment="Center" VerticalAlignment="Center" Background="#C8FFFFFF">
					<StackPanel>
						<TextBlock Name="ResolutionInputBoxTitleTextBlock" Margin="25,5,25,5" FontFamily="{DynamicResource Font}" FontWeight="Bold" FontSize="15" TextAlignment="Center"/>
						<DockPanel Height="26" Margin="100,5">
							<TextBlock Name="ResolutionInputBoxWidthTextBlock" Margin="25,5,25,0" FontFamily="{DynamicResource Font}" FontWeight="Bold" FontSize="15" TextAlignment="Center"/>
							<TextBox Name="ResolutionInputBoxWidthTextBox" HorizontalAlignment="Right" VerticalAlignment="Center" Width="50" Height="25" MaxLength="4" FontFamily="Segoe UI" FontWeight="Bold" FontSize="16" TextAlignment="Center" PreviewTextInput="FPSInputBoxTextBox_PreviewTextInput" DataObject.Pasting="FPSInputBoxTextBox_Pasting"/>
						</DockPanel>
						<DockPanel Height="26" Margin="100,5">
							<TextBlock Name="ResolutionInputBoxHeightTextBlock" Margin="25,5,25,0" FontFamily="{DynamicResource Font}" FontWeight="Bold" FontSize="15" TextAlignment="Center"/>
							<TextBox Name="ResolutionInputBoxHeightTextBox" HorizontalAlignment="Right" VerticalAlignment="Center" Width="50" Height="25" MaxLength="4" FontFamily="Segoe UI" FontWeight="Bold" FontSize="16" TextAlignment="Center" PreviewTextInput="FPSInputBoxTextBox_PreviewTextInput" DataObject.Pasting="FPSInputBoxTextBox_Pasting"/>
						</DockPanel>
						<DockPanel Height="26" Margin="100,5">
							<TextBlock Name="ResolutionInputBoxFullscreenTextBlock" Margin="25,5,25,0" FontFamily="{DynamicResource Font}" FontWeight="Bold" FontSize="15" TextAlignment="Center"/>
							<CheckBox Name="ResolutionInputBoxFullscreenCheckbox" Margin="25,5,25,0" HorizontalAlignment="Right"/>
						</DockPanel>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
							<Button Name="ResolutionInputBoxOKButton" Style="{DynamicResource WhiteButtonStyle}" Click="ResolutionInputBoxOKButton_Click"/>
							<Button Name="ResolutionInputBoxCancelButton" Style="{DynamicResource WhiteButtonStyle}" Click="ResolutionInputBoxCancelButton_Click"/>
						</StackPanel>
					</StackPanel>
					<Button Name="ResolutionInputBoxCloseButton" Style="{DynamicResource BoxCloseButtonStyle}" Click="ResolutionInputBoxCancelButton_Click"/>
				</Grid>
			</Grid>
			<Grid Name="ChangelogBox" Background="#80000000" Visibility="Collapsed">
				<Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="844" Background="#C8FFFFFF">
					<StackPanel>
						<TextBlock Name="ChangelogBoxTitleTextBlock" Margin="25,5,25,5" FontFamily="{DynamicResource Font}" FontWeight="Bold" FontSize="15" TextAlignment="Center"/>
						<TextBlock Name="ChangelogBoxMessageTextBlock" Margin="22,0,22,5" FontFamily="Segoe UI" Visibility="Collapsed"/>
						<ScrollViewer Name="ChangelogBoxScrollViewer" Margin="14,0,14,0" Width="800" Height="325" ScrollViewer.VerticalScrollBarVisibility="Auto">
							<TextBox Name="ChangelogBoxTextBox" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#19000000" FontFamily="Consolas" IsReadOnly="True" TextWrapping="Wrap"/>
						</ScrollViewer>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
							<Button Name="ChangelogBoxOKButton" Style="{DynamicResource WhiteButtonStyle}" Click="ChangelogBoxCloseButton_Click"/>
						</StackPanel>
					</StackPanel>
					<Button Name="ChangelogBoxCloseButton" Style="{DynamicResource BoxCloseButtonStyle}" Click="ChangelogBoxCloseButton_Click"/>
				</Grid>
			</Grid>
			<Grid Name="AboutBox" Background="#80000000" Visibility="Collapsed">
				<Grid HorizontalAlignment="Center" VerticalAlignment="Center" Width="644" Background="#C8FFFFFF">
					<StackPanel>
						<StackPanel>
							<TextBlock Name="AboutBoxTitleTextBlock" Margin="25,5,25,5" FontFamily="{DynamicResource Font}" FontWeight="Bold" FontSize="15" TextAlignment="Center"/>
							<TextBlock Name="AboutBoxAppNameTextBlock" Margin="150,0,25,0" Text="Better HI3 Launcher" FontFamily="Segoe UI" FontWeight="Bold" FontSize="15"/>
							<TextBlock Name="AboutBoxMessageTextBlock" Margin="150,0,22,0" FontFamily="Segoe UI" TextWrapping="Wrap"/>
						</StackPanel>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
							<Button Name="AboutBoxGitHubButton" Style="{DynamicResource WhiteButtonStyle}" Click="AboutBoxGitHubButton_Click"/>
							<Button Name="AboutBoxOKButton" Style="{DynamicResource WhiteButtonStyle}" Click="AboutBoxCloseButton_Click"/>
						</StackPanel>
					</StackPanel>
					<Image gif:AnimationBehavior.SourceUri="Assets/Images/HoV_Dance.gif" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="16,25,0,18" Width="128"/>
					<Button Name="AboutBoxCloseButton" Style="{DynamicResource BoxCloseButtonStyle}" Click="AboutBoxCloseButton_Click"/>
				</Grid>
			</Grid>
			<Grid Name="AnnouncementBox" Background="#80000000" Visibility="Collapsed">
				<Grid HorizontalAlignment="Center" VerticalAlignment="Center" MaxWidth="844" Background="#C8FFFFFF">
					<StackPanel>
						<TextBlock Name="AnnouncementBoxTitleTextBlock" Margin="25,5,25,5" FontFamily="{DynamicResource Font}" FontWeight="Bold" FontSize="15" TextAlignment="Center"/>
						<ScrollViewer Name="AnnouncementBoxScrollViewer" Margin="14,0,14,0" MaxHeight="325" ScrollViewer.VerticalScrollBarVisibility="Auto">
							<TextBlock Name="AnnouncementBoxMessageTextBlock" FontFamily="Segoe UI" TextWrapping="Wrap" FontSize="14"/>
						</ScrollViewer>
						<CheckBox Name="AnnouncementBoxDoNotShowCheckbox" Margin="14,5,25,0" HorizontalAlignment="Center"/>
						<StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
							<Button Name="AnnouncementBoxOKButton" Style="{DynamicResource WhiteButtonStyle}" Click="AnnouncementBoxCloseButton_Click"/>
						</StackPanel>
					</StackPanel>
					<Button Name="AnnouncementBoxCloseButton" Style="{DynamicResource BoxCloseButtonStyle}" Click="AnnouncementBoxCloseButton_Click"/>
				</Grid>
			</Grid>
		</Grid>
	</Grid>
</Window>